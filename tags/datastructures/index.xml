<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>DataStructures on NOWHERESVILLE</title>
    <link>/tags/datastructures/</link>
    <description>Recent content in DataStructures on NOWHERESVILLE</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 25 Jan 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/tags/datastructures/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Algorithms-Design and Analysis(Stanford) Notes</title>
      <link>/post/2018/01/25/algorithms/</link>
      <pubDate>Thu, 25 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/2018/01/25/algorithms/</guid>
      <description>Divide and Conquer 分而治之  DIVIDE into smaller sub-problems CONQUER via recursive calls COMBINE solutions of sub-problems into one for the original problem  Master Method  Cool feature: a &amp;ldquo;black-box&amp;rdquo; method for solving recurrences
 Determine the upper bound of running time for most of the D&amp;amp;C algos
 Assumption: all sub-problems have equal size
    unbalanced sub-problems? more than one recurrence?    Recurrence format:</description>
    </item>
    
    <item>
      <title>Python Data Structures</title>
      <link>/post/2018/01/25/python-data-structure/</link>
      <pubDate>Thu, 25 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/2018/01/25/python-data-structure/</guid>
      <description> List  See help(list)  # Create a new list empty = list() # or empty = [] # faster, more pythonic   Lists can contain elements of different types ​  Stack Queue Heap Tree </description>
    </item>
    
    <item>
      <title>Python练习题（不断更新）</title>
      <link>/post/2018/01/01/python-exercises/</link>
      <pubDate>Mon, 01 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/2018/01/01/python-exercises/</guid>
      <description>基础 数据结构 算法 Greatest Common Divisor 最大公因数 Euclid&amp;rsquo;s algorithm:
def gcd(p, q): &#39;&#39;&#39;Compute the greatest common divisor of 2 nonnegative integers &#39;&#39;&#39; if q==0: return p else: return gcd(q, p%q)   Two integers $p,q\geq 0$,
(1) obviously, $gcd(p, 0)=p$
(2) $gcd(p,q)=gcd(q,r)$, where $r=p\%q$
Proof of statement (2):
Let $a=gcd(p,q)$ and $b=gcd(q,r)$, then $$ \left. \begin{align} a|p, a|q \Rightarrow a|r \Rightarrow a\leq gcd(q,r)=b\nonumber \newline b|q, b|r \Rightarrow b|p \Rightarrow b\leq gcd(p,q)=a \nonumber \end{align} \right\} \Rightarrow a=b $$ Proof of termination of Euclid&amp;rsquo;s algo:</description>
    </item>
    
  </channel>
</rss>