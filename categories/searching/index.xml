<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Searching on NOWHERESVILLE</title>
    <link>/categories/searching/</link>
    <description>Recent content in Searching on NOWHERESVILLE</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 01 Jan 2018 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/categories/searching/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Searching 搜索算法</title>
      <link>/post/2018/01/01/searching/</link>
      <pubDate>Mon, 01 Jan 2018 00:00:00 +0000</pubDate>
      
      <guid>/post/2018/01/01/searching/</guid>
      <description>Linear Search Search an Unsorted List def linearSearch(arr, target): for i in range(len(arr)): if arr[i] == target: return i return None  # test running time import random import timeit def testLinearSearch(times): while times: lst = list(range(1000)) random.shuffle(lst) a = random.choice(lst) linearSearch(lst, a) times -= 1 start = timeit.default_timer() testLinearSearch(10000) stop = timeit.default_timer() print(stop - start) # 12.352746746104685  Analysis of running time:
 worst-case: $O(n)$ best-case: $O(1)$  More efficient linear search:</description>
    </item>
    
  </channel>
</rss>